name: Release
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      nx_affected: ${{ steps.set-nx-affected.outputs.nx_affected }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v2

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Modify Workspace File
        run: sed -e "s;libs/ts-rest/\*;dist/libs/ts-rest/*;g" package.json > package-new.json && mv package-new.json package.json

      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@master
        with:
          title: Release Tracking
          # this expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          version: pnpm version-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: nrwl/last-successful-commit-action@v1
        id: last_successful_commit
        with:
          branch: 'main'
          workflow_id: 'release.yml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - id: set-nx-affected
        run: NX_AFFECTED_BASE=${{ steps.last_successful_commit.outputs.commit_hash }} pnpm run ci:nx-affected

  # deploy-docs:
  #   name: Deploy Docs
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   if: ${{ contains(needs.build.outputs.nx_affected, 'docs') }}
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: nrwl/nx-set-shas@v2

  #     - uses: pnpm/action-setup@v2.0.1
  #       name: Install pnpm
  #       id: pnpm-install
  #       with:
  #         version: 7
  #         run_install: false

  #     - name: Get pnpm store directory
  #       id: pnpm-cache
  #       run: |
  #         echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

  #     - uses: actions/cache@v3
  #       name: Setup pnpm cache
  #       with:
  #         path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Install dependencies
  #       run: pnpm install
  #     - name: Build Docs
  #       run: pnpm exec nx run docs:build
  #     - name: Set AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-2
  #     - name: 'Deploy docs to S3'
  #       run: 'aws s3 sync dist/apps/docs/ s3://ts-rest-docs-bucket/'
